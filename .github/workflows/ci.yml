name: Github Actions Demo
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Select the target environment
        default: DIT
        options:
          - DIT
          - SIT
          - PROD
        required: true
        type: choice
      tags:
        description: Provide commit tag
        default: "d"
        required: false
        type: string

description: actions demo description
# permissions: write-all

jobs:
  Example-Action-job:
    name: first-job
    environment: ${{ github.event.inputs.environment }}
    strategy:
      matrix:
        os: [macos]
        dot-net: [3.1.x]
    env:
      DB_PASS: "123"
      DB_USER: "db user"
    runs-on: [self-hosted, macOS, x64]
    steps:
      - name: run for
        run: echo  "Job ran for ${{ matrix.dot-net}} ${{ matrix.os}}"
      - name: Runner info
        env:
          FAIL_STEP: ${{ github.event.inputs.environment }}
        run: |
          echo  "The job was triggered by a ${{ github.event_name }} event and runner os is ${{ runner.os }}";
          echo " Runner os: ${{ runner.os}}"
          echo " Runner tools ${{ runner.tool_cache }}"
          echo " Runner object:- ${{ runner.arch }} ${{ runner.name}} ${{ runner.temp }}"
          echo " github run id: ${{ github.run_id }} ${{ github.ref_name}} ${{ github.run_number}}"
          echo " job status: ${{ job.status}}"
          echo " input variable environment value:- ${{ inputs.environment}}"
          echo " input variable environment value:- ${{ env.DB_PASS}} ${{ env.DB_USER}}"
          if [ $FAIL_STEP == true ]; then 
            exit 0
          fi

      - name: condition to check
        if: github.event_name == 'pull_request'
        run: echo " This is a pull request"
      - name: list files
        run: |
          ls ${{ github.workspace}}
      - name: checkout code
        uses: actions/checkout@v2
      - run: |
          touch ./world.txt
      - name: setup dependencies
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - run: echo test
      - name: upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: my-artifact
          path: ./world.txt

  CD:
    runs-on: [self-hosted]
    env:
      ENV_VAR_1: 123
    outputs:
      Success: ${{ env.ENV_VAR_1}}
    steps:
      - name: deploy
        uses: actions/download-artifact@v5
        with:
          name: my-artifact
      - name: Display structure of the downloaded file
        run: ls -R
  Success-job:
    name: complete job
    runs-on: [self-hosted]
    needs: Example-Action-job
    steps:
      - name: Complete message
        run: echo "job completed"
